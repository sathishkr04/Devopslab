pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "my-main-app:latest"  // Name of the local Docker image
        CONTAINER_NAME = "my-main-app"
        REPO_URL = "pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "my-main-app:latest"  // Name of the local Docker image
        CONTAINER_NAME = "my-main-app"
        REPO_URL = "https://github.com/sathishkr04/DevOps-lab.git"  // Replace with your actual repo URL
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    echo "Cloning repository..."
                    git branch: 'main', url: https://github.com/sathishkr04/DevOps-lab.git
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    sh "docker build -t $DOCKER_IMAGE ."
                }
            }
        }

        stage('Stop & Remove Existing Container') {
            steps {
                script {
                    echo "Stopping old container if it exists..."
                    sh "docker stop $CONTAINER_NAME || true"
                    sh "docker rm $CONTAINER_NAME || true"
                }
            }
        }

        stage('Run New Docker Container') {
            steps {
                script {
                    echo "Running the new Docker container..."
                    sh "docker run -d --name $CONTAINER_NAME -p 80:3000 $DOCKER_IMAGE"
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful!"
        }
        failure {
            echo "❌ Deployment failed. Check logs for errors."
        }
    }
}"  // Replace with your actual repo URL
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    echo "Cloning repository..."
                    git branch: 'main', url: REPO_URL
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    sh "docker build -t $DOCKER_IMAGE ."
                }
            }
        }

        stage('Stop & Remove Existing Container') {
            steps {
                script {
                    echo "Stopping old container if it exists..."
                    sh "docker stop $CONTAINER_NAME || true"
                    sh "docker rm $CONTAINER_NAME || true"
                }
            }
        }

        stage('Run New Docker Container') {
            steps {
                script {
                    echo "Running the new Docker container..."
                    sh "docker run -d --name $CONTAINER_NAME -p 80:3000 $DOCKER_IMAGE"
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful!"
        }
        failure {
            echo "❌ Deployment failed. Check logs for errors."
        }
    }
}